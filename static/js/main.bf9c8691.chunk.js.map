{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/Search/Search.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","user","name","email","CardList","names","map","person","id","Search","placeholder","changeText","type","onChange","App","e","setState","searchField","target","value","handleClick3","console","log","state","handleClick2","handleClick1","bind","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAEaA,EAAO,SAACC,GACjB,OACI,sBAAKC,UAAU,OAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,iDACtB,6BAAKH,EAAMI,KAAKC,OAChB,4BAAIL,EAAMI,KAAKE,YCJdC,G,MAAW,SAACP,GACrB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMQ,MAAMC,KAAI,SAAAC,GAAM,OACnB,cAAC,EAAD,CAAMN,KAAMM,GAAaA,EAAOC,WCLnCC,G,YAAS,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,WACjC,OACI,8BACI,uBACAC,KAAK,SACLF,YAAaA,EACbZ,UAAU,SACVe,SAAUF,QCkCPG,E,kDArCb,aAAe,IAAD,8BACZ,gBAaFH,WAAa,SAACI,GACZ,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAfzB,EAsBdC,aAAe,SAACL,GAAD,OAAOM,QAAQC,IAAI,eApBhC,EAAKC,MAAQ,CACXlB,MAAM,GACNY,YAAa,IAEf,EAAKO,aAAe,EAAKC,aAAaC,KAAlB,gBANR,E,qDAQd,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAEA,EAASC,UACxBF,MAAK,SAAAG,GAAK,OAAI,EAAKf,SAAS,CAACX,MAAO0B,S,0BAMzC,WACEV,QAAQC,IAAI,Q,oBAMd,WAAU,IAAD,EACsBU,KAAKT,MAA3BlB,EADA,EACAA,MAAOY,EADP,EACOA,YACRgB,EAAmB5B,EAAM6B,QAAO,SAAAhC,GAAI,OAAIA,EAAKA,KAAKiC,cAAcC,SAASnB,EAAYkB,kBAC3F,OACE,sBAAKrC,UAAU,MAAf,UACE,oDACA,cAAC,EAAD,CAAQY,YAAY,cAAcC,WAAYqB,KAAKrB,aACnD,cAAC,EAAD,CAAUN,MAAO4B,W,GAhCPI,IAAMC,WCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.bf9c8691.chunk.js","sourcesContent":["import React from 'react';\nimport '../Card/Card.styles.css'\nexport const Card = (props) => {\n    return(\n        <div className='card'>\n            <img alt=\"monster\" src={`https://robohash.org/3?set=set4&size=180x180`}/>\n            <h3>{props.user.name}</h3>\n            <p>{props.user.email}</p>\n        </div>\n    )\n}","import React from 'react';\nimport {Card} from '../Card/Card'\nimport './CardList.styles.css'\nexport const CardList = (props) => {\n    return(\n        <div className=\"card-list\">\n            {props.names.map(person => (\n                <Card user={person} key={person.id}/>\n            ))}\n        </div>\n    )\n}\n\n//Card ---> key=name.id     name=person.name","import React from 'react';\nimport '../Search/Search.styles.css';\nexport const Search = ({placeholder, changeText}) => {\n    return(\n        <div>\n            <input \n            type=\"search\" \n            placeholder={placeholder} \n            className=\"search\"\n            onChange={changeText}></input>\n        </div>\n    )\n}","import React from 'react';\nimport {CardList} from './components/CardList/CardList';\nimport './App.css';\nimport {Search} from './components/Search/Search';\n\nclass App extends React.Component {\n  constructor() {\n    super() \n    this.state = {\n      names:[],\n      searchField: '',\n    };\n    this.handleClick2 = this.handleClick1.bind(this);\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response=>response.json())\n      .then(users => this.setState({names: users}))\n  }\n\n  changeText = (e) => {\n    this.setState({searchField: e.target.value})\n  } \n  handleClick1() {\n    console.log('hi');\n  }\n\n\n  handleClick3 = (e) => console.log(\"hihihihihi\");\n\n  render() {\n    const {names, searchField} = this.state;\n    const filteredMonsters = names.filter(name => name.name.toLowerCase().includes(searchField.toLowerCase()));\n    return(\n      <div className=\"App\">\n        <h1> Monsters Roledex </h1>\n        <Search placeholder=\"enter value\" changeText={this.changeText}/>\n        <CardList names={filteredMonsters}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}